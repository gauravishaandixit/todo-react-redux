{"version":3,"sources":["components/input/Input.js","actions/Actions.js","components/todolist/TodoList.js","App.js","reportWebVitals.js","reducers/TodoReducer.js","index.js"],"names":["Input","useState","todo","setTodo","dispatch","useDispatch","className","type","value","onChange","e","target","onClick","trim","newTodo","item","done","date","Date","now","payload","SaveTodo","ShowTodo","id","Checkbox","checked","color","CheckDone","inputProps","App","todoListFromState","useSelector","state","todoList","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","TodoReducer","action","console","log","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAgCeA,EAzBD,WAAO,IAAD,EAEOC,mBAAS,IAFhB,mBAEVC,EAFU,KAEJC,EAFI,KAGVC,EAAWC,cAcjB,OACI,sBAAKC,UAAY,QAAjB,UACI,uBAAOC,KAAO,OAAOC,MAASN,EAAMO,SAAY,SAAAC,GAAC,OAAIP,EAAQO,EAAEC,OAAOH,UACtE,wBAAQI,QAfA,WACZ,GAAmB,KAAhBV,EAAKW,OAAc,CAClB,IAAMC,EAAU,CACZC,KAAMb,EACNc,MAAO,EACPC,KAAOC,KAAKC,OAEhBhB,EAAQ,IACRC,ECpBY,SAACU,GACrB,MAAO,CACHP,KAAO,OACPa,QAAUN,GDiBGO,CAASP,MAOlB,sB,gBEHGQ,EAlBE,SAAC,GAAsB,IAArBP,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,KAAMO,EAAQ,EAARA,GAErBnB,EAAWC,cAKjB,OAAO,sBAAKC,UAAY,WAAjB,UACH,cAACkB,EAAA,EAAD,CACIC,QAAST,EACTU,MAAQ,UACRjB,SARa,WACjBL,EDHiB,SAACmB,GACtB,MAAO,CACHhB,KAAO,QACPa,QAAUG,GCADI,CAAUJ,KAQfK,WAAY,CAAE,aAAc,wBAEhC,oBAAGtB,UAAaU,EAAO,iBAAmB,GAA1C,cAAgDD,EAAhD,WCKOc,MAnBf,WAEE,IAAMC,EAAoBC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,YAErD,OACE,qBAAK3B,UAAU,MAAf,SACE,sBAAKA,UAAY,iBAAjB,UACE,qBAAKA,UAAY,kBAAjB,SAEIwB,EAAkBI,KAAI,SAACnB,GAAD,OACpB,cAAC,EAAD,CAAUA,KAAQA,EAAKA,KAAMC,KAAQD,EAAKC,KAAMO,GAAMR,EAAKE,MAAaF,EAAKE,WAGnF,cAAC,EAAD,UCPOkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,gBCuBCQ,EA9BK,WAAqC,IAApCZ,EAAmC,uDAA3B,CAACC,SAAS,IAAMY,EAAW,uCAEpD,GAAmB,SAAhBA,EAAOtC,KAEN,OADAyB,EAAMC,SAAN,sBAAsBD,EAAMC,UAA5B,CAAsCY,EAAOzB,UACtCY,EAGP,GAAmB,UAAhBa,EAAOtC,KAAiB,CACvB,IAAM0B,EAAQ,YAAOD,EAAMC,UAe3B,OAdAA,EAASC,KAAI,SAACnB,GACPA,EAAKE,OAAS4B,EAAOzB,WACH,IAAdL,EAAKC,KACJD,EAAKC,MAAO,EAEZD,EAAKC,MAAO,EAEhB8B,QAAQC,IAAIhC,OAMpBiB,EAAMC,SAAN,YAAqBA,GACdD,EAGP,OAAOA,GChBbgB,EAAQC,YACZL,EACAM,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUN,MAASA,EAAnB,SACE,cAAC,EAAD,QAGJO,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.0f4f75ac.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport './Input.css'\r\n\r\nimport { useDispatch } from 'react-redux'\r\nimport { SaveTodo } from '../../actions/Actions'\r\n//import saveTodo from '../../slice/todoSlice'\r\n\r\nconst Input = () => {\r\n\r\n    const[todo, setTodo] = useState('')\r\n    const dispatch = useDispatch()\r\n    \r\n    const addTodo = () => {\r\n        if(todo.trim() !== ''){\r\n            const newTodo = {\r\n                item: todo,\r\n                done : false,\r\n                date : Date.now()\r\n            }\r\n            setTodo(\"\")\r\n            dispatch(SaveTodo(newTodo))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = 'input'>\r\n            <input type = 'text' value = {todo} onChange = {e => setTodo(e.target.value)}/>\r\n            <button onClick = {addTodo}>Add!</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","export const SaveTodo = (newTodo) => {\r\n    return {\r\n        type : 'save',\r\n        payload : newTodo\r\n    }\r\n}\r\n\r\nexport const CheckDone = (id) => {\r\n    return {\r\n        type : 'check',\r\n        payload : id\r\n    }\r\n}","import React from 'react';\r\nimport './TodoList.css'\r\nimport { Checkbox } from '@material-ui/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { CheckDone } from '../../actions/Actions';\r\n\r\nconst ShowTodo = ({item, done, id}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleChange = () => {\r\n        dispatch(CheckDone(id))\r\n    }\r\n\r\n    return <div className = 'todoItem'>\r\n        <Checkbox\r\n            checked={done}\r\n            color = 'primary'\r\n            onChange={handleChange}\r\n            inputProps={{ 'aria-label': 'secondary checkbox' }}\r\n        />\r\n        <p className = {done ? 'todoItem--done' : ''}> {item} </p>\r\n    </div>\r\n}\r\n\r\nexport default ShowTodo;","import './App.css';\nimport Input from './components/input/Input'\nimport { useSelector } from 'react-redux'\nimport ShowTodo from './components/todolist/TodoList'\n\n\nfunction App() {\n\n  const todoListFromState = useSelector(state => state.todoList)\n\n  return (\n    <div className=\"app\">\n      <div className = 'app__container'>\n        <div className = 'todo__container'>\n          {\n            todoListFromState.map((item) => \n              <ShowTodo item = {item.item} done = {item.done} id = {item.date} key = {item.date}/>)\n          }\n        </div>\n        <Input/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const TodoReducer = (state = {todoList:[] }, action) => {\r\n    \r\n    if(action.type === 'save'){\r\n        state.todoList =  [...state.todoList, action.payload]\r\n        return state\r\n    }\r\n    else {\r\n        if(action.type === 'check'){\r\n            const todoList = [...state.todoList]\r\n            todoList.map((item) => {\r\n                if(item.date === action.payload){\r\n                    if(item.done === false)\r\n                        item.done = true\r\n                    else\r\n                        item.done = false\r\n\r\n                    console.log(item)\r\n                }\r\n                else{\r\n                    \r\n                }\r\n            })\r\n            state.todoList = [...todoList]\r\n            return state\r\n        }\r\n        else\r\n            return state\r\n    }\r\n}\r\n\r\nexport default TodoReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport TodoReducer from './reducers/TodoReducer';\n\n\nconst store = createStore(\n  TodoReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store = {store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}